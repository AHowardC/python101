 name = raw_input("What is your name")
 
 


 #day 4 algorithim 1 
 # if we list all natural numbers below 10 that are mulitiples of 3 or 5, we get 3,5,6, and 9.
 # the sum of these nultiples is 23. 
 # Find the sum of all the multiples of 3 or 5 below 1000.
 empty_list = []
for i in range (0, 1000, 3):
    empty_list.append(i)
for j in range (0, 1000, 5):
    empty_list.append(j)
total = sum(empty_list)
print total

# day 4 algorithim 2 
# Each new term in the fibonacci sequence is generated by adding the previous two terms. 
#by starting with 1 and 2, the first 10 terms will be:
# 1,2,3,5,8,13,21,34,55,89,...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
#find the sum of the even_valued terms.
fib_first = [1, 2]
even_fib = []
i = 1
max_fib = 4000000
curr_sum = fib_first[1]
while curr_sum <= max_fib:
    if (curr_sum % 2 == 0):
        even_fib.append(curr_sum)
    curr_sum = fib_first[i] + fib_first[i-1]
    if (curr_sum > max_fib):
        break
    fib_first.append(curr_sum)
    i += 1
# print fib_first
# print even_fib[-1]
print sum(even_fib)

#Algorithim 3 
#The prime factors of 13195 are 5,7,13 and 29.
#What is the largest prime factor of the number 600851475143?
def is_prime(n, prime_list):
    for i in prime_list:
        if (n % i == 0):
            return False 
    return True

num = 600
factor = []
prime_factor = [2]
for i in range (2, num):
    if (num % i == 0): # factor
        if is_prime(i, prime_factor):
            prime_factor.append(i)
        


#         factor.append(i)
# for j in factor:
#     if is_prime(j):
#         prime_factor.append(j)
# print factor
print prime_factor
if (len(prime_factor) > 0):
    print max(prime_factor)
else:
    print "Your number %d is prime!" % num
